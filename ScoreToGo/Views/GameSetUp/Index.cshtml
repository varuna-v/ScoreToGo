@model ScoreToGo.ViewModels.GameModel

@{
    ViewBag.Title = "New Game";
}

<h2>Game</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>New Game</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
            <div class="panel panel-default form-group">
                <div class="panel-heading" role="tab" id="headingOne">
                    <h4 class="panel-title">
                        <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            Basic Information
                        </a>
                    </h4>
                </div>
                <div id="collapseOne" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
                    <div class="panel-body">
                        @Html.LabelFor(model => model.StartedAt, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.StartedAt, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartedAt, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="panel panel-default form-group">
                <div class="panel-heading" role="tab" id="headingTwo">
                    <h4 class="panel-title">
                        <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                            Team A
                        </a>
                    </h4>
                </div>
                <div id="collapseTwo" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
                    <div class="panel-body">
                        @if (string.IsNullOrEmpty(Model.TeamACode))
                        {
                            <span class="col-md-10 pad-10">
                                @Html.DropDownListFor(m => m.TeamACode, Model.AvailableTeamAList, new { @onchange = "submitform();", @class = "form-control" })
                            </span>
                        }
                        else
                        {
                            @Model.TeamACode
                            @Html.HiddenFor(m => m.TeamACode)

                            for (int i = 0; i < Model.Teams[0].Players.Count; i++)
                            {
                                @Html.EditorFor(model => model.Teams[0].Players[i])
                            }
                        }
                    </div>
                </div>            </div>
            <div class="panel panel-default form-group">
                <div class="panel-heading" role="tab" id="headingThree">
                    <h4 class="panel-title">
                        <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                            Team B
                        </a>
                    </h4>
                </div>
                <div id="collapseThree" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingThree">
                    <div class="panel-body">
                        @if (string.IsNullOrEmpty(Model.TeamBCode))
                        {
                            <span class="col-md-10 pad-10">
                                @Html.DropDownListFor(m => m.TeamBCode, Model.AvailableTeamBList, new { @onchange = "submitform();", @class = "form-control" })
                            </span>
                        }
                        else
                        {
                            @Model.TeamBCode
                            @Html.HiddenFor(m => m.TeamBCode)

                            for (int i = 0; i < Model.Teams[1].Players.Count; i++)
                            {
                                @Html.EditorFor(model => model.Teams[1].Players[i])
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
        @if(Model.AvailableTeams != null)
        { 
            for(int i = 0; i < Model.AvailableTeams.Length; i++)
            {
                @Html.HiddenFor(model => model.AvailableTeams[i])
            }
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
    //!! common place for scripts?
    function submitform() {
        $('form').submit();
    }
</script>